[]
•
*
-

[웹서비스 개발 기획](https://www.notion.so/f84cd90f5aed4046b70728fe72f7eb72)
- 정보구조설계(I.A.)
- 화면설계(스토리보드)
- 정보구조설계 Information Architecture
    - 웹사이트의 정보(메뉴구조)를 단계별로 정리한 문서
    - 웹사이트 사이트맵 검색결과
    [https://bit.ly/2uvjTVG](https://bit.ly/2uvjTVG)
- 기능목록
홈페이지를 구성하고 있는 메뉴와 기능 목록

마인드맵(FREEMIND)
- 주요 기능과 db를 작성해야 함



프로젝트
* 화면설계 (Kakao Oven) --- https://ovenapp.io/
- 스토리보드
- 와이어프레임
- 프로토타입

[Git]
- 버전 관리 시스템

git pull = 다른 사람의 수정한것을 모두 받음
git commit -m "" = 27번쨰 코드에 질병관리 본부 데이터를 수정

nginx - 파일을 서빙해줌
apache - 파일을 서빙해줌
apt - ubuntu package를 관리함

pip = python package를 관리함
pip install --upgrade pip = upgrade pip
mkdir mysite
cd mysite
pip3 install virtualenv = 필수 - ex) 가상의 컴퓨터를 구동시킴 - 밖의 환경에 영향을 받지않음
virtualenv myvenv = 나의 virtual environment
pip list = 초기화된 가상환경의 설정
pip3 install django = 최신의 장고버전이 설치됨
django-admin startproject testdjango . = 장고 프로젝트가 testdjango 의 이름으로 설치가 됨
python manage.py migrate = migrate -- python으로 짠 코드를 db에 반영함 (.sqlite3) / 

** Python ORM 기법을 사용하여 DB생성 가능

settings.py -> 28 ALLOWED_HOSTS=['*'] = 화이트 리스트
python manage.py runserver 0:80 = server를 시작

/admin = admin page를 만들어줌

* 메뉴/페이지 하나하나를 app으로 만듦

python manage.py startapp main = main이라는 app을 만듦 (폴더)

settings.py -> INSTALLED_APPS = [ '...', 'main', ] = main을 추가
urls.py -> from main.views import index
urls.py -> urlpatterns = [..., path('', index, name="index"),]

main -> views.py
    def index(request):
        return render(request, 'main/index.html')

main -> templates -> main -> index.html


0 - 나 자신
80 - http